/**
 * MenuGestionPacientesVista.java
 * Adnana Catrinel Dragut
 * v1.0 21/04/2022.
 * 
 */
package vista.vistasUsuarioSanitario;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import control.Hospital;
import control.OyenteVista;
import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.SwingConstants.LEFT;
import javax.swing.table.DefaultTableModel;
import modelo.clasesDTOs.PacienteDTO;
import modelo.clasesProxys.Comms;
import modelo.clasesProxys.ProxyPaciente;

/**
 * Clase que contiene los métodos para crear y gestionar 
 * los componentes y los eventos de la pantalla MenuGestionPacientesVista.
 * 
 */
public class MenuGestionPacientesVista extends javax.swing.JFrame {
    private MenuSanitarioVista menuSanitarioVista = null;
    private Comms comms = null;
    private ProxyPaciente pxPaciente = null;
    private Gson gson = null;
    private OyenteVista oyenteVista = null;
    private String idConexion = null;
    private List<PacienteDTO> pacientes = null;
    private DefaultTableModel tableModel = null;
    private int indexPacienteSeleccionado;
    
    private static final int INDEX_PACIENTE_NO_SELECCIONADO = -1;
    
    /* Mensajes de Error */
    private final String ERROR_OBTENER_PACIENTES = 
            "No se ha podido obtener la lista con pacientes.";
    
    /**
     * Crea e inicializa los componentes de MenuGestionPacientesVista.
     * 
     * @param _menuSanitarioVista
     * @param _oyenteVista
     * @param _comms
     * @param _idConexion
     */
    public MenuGestionPacientesVista(MenuSanitarioVista _menuSanitarioVista, 
            OyenteVista _oyenteVista, Comms _comms, String _idConexion) {
        this.menuSanitarioVista  = _menuSanitarioVista;
        this.comms = _comms;
        this.pxPaciente = ProxyPaciente.getInstance();
        this.gson = new Gson();
        this.oyenteVista = _oyenteVista;
        this.idConexion = _idConexion;
        this.pacientes = obtenerListaConPacientes();
                
        initComponents();
        setResizable(false);  //Deshabilita la opción de maximizar-minimizar 
        pack();   // ajusta ventana y sus componentes
        setLocationRelativeTo(null);  // centra en la pantalla
        habilitarBotonConectado(_idConexion);
        cargarTablaConPacientes();
        
        /* Subraya el texto "Sanitario Seleccionado" */
        lista_de_pacientes_label.setText("<HTML><U>Lista De Pacientes</U></HTML>");
        lista_de_pacientes_label.setHorizontalAlignment(LEFT);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panel_principal = new javax.swing.JPanel();
        paner_superior = new javax.swing.JPanel();
        gestionDePacientes_label = new javax.swing.JLabel();
        hospital_icon = new javax.swing.JLabel();
        b_connected = new javax.swing.JButton();
        lista_de_pacientes_label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_con_pacientes = new javax.swing.JTable();
        b_Atrás = new javax.swing.JButton();
        b_NuevoEpisodio = new javax.swing.JButton();
        b_VerEpisodios = new javax.swing.JButton();
        b_NuevaCita = new javax.swing.JButton();
        b_VerCitas = new javax.swing.JButton();
        b_RegistroVacunacion = new javax.swing.JButton();
        b_RecetaElectronica = new javax.swing.JButton();
        b_VerHistoria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panel_principal.setBackground(new java.awt.Color(255, 255, 255));

        paner_superior.setBackground(new java.awt.Color(0, 153, 153));
        paner_superior.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        gestionDePacientes_label.setFont(new java.awt.Font("Berlin Sans FB", 1, 24)); // NOI18N
        gestionDePacientes_label.setText("Gestión De Pacientes");

        hospital_icon.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        hospital_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/hospital_icon.png"))); // NOI18N
        hospital_icon.setMaximumSize(new java.awt.Dimension(70, 70));
        hospital_icon.setMinimumSize(new java.awt.Dimension(70, 70));
        hospital_icon.setPreferredSize(new java.awt.Dimension(70, 70));

        b_connected.setBackground(new java.awt.Color(204, 204, 204));
        b_connected.setText("   ");
        b_connected.setBorder(null);
        b_connected.setEnabled(false);
        b_connected.setFocusable(false);
        b_connected.setSelected(true);

        javax.swing.GroupLayout paner_superiorLayout = new javax.swing.GroupLayout(paner_superior);
        paner_superior.setLayout(paner_superiorLayout);
        paner_superiorLayout.setHorizontalGroup(
            paner_superiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paner_superiorLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(hospital_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(paner_superiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paner_superiorLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_connected, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paner_superiorLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(gestionDePacientes_label)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        paner_superiorLayout.setVerticalGroup(
            paner_superiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hospital_icon, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
            .addGroup(paner_superiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gestionDePacientes_label)
                .addGap(10, 10, 10)
                .addComponent(b_connected))
        );

        lista_de_pacientes_label.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        lista_de_pacientes_label.setForeground(new java.awt.Color(0, 153, 153));
        lista_de_pacientes_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lista_de_pacientes_label.setText("Lista de Pacientes");
        lista_de_pacientes_label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        tabla_con_pacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido 1", "NSS", "Edad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_con_pacientes.setFocusable(false);
        tabla_con_pacientes.setGridColor(new java.awt.Color(0, 153, 153));
        tabla_con_pacientes.setRowHeight(30);
        tabla_con_pacientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla_con_pacientes.setShowGrid(true);
        tabla_con_pacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_con_pacientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_con_pacientes);

        b_Atrás.setBackground(new java.awt.Color(204, 204, 204));
        b_Atrás.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        b_Atrás.setForeground(new java.awt.Color(0, 153, 153));
        b_Atrás.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/atras_icon.png"))); // NOI18N
        b_Atrás.setText("   Atrás");
        b_Atrás.setActionCommand("   Nuevo Sanitario");
        b_Atrás.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_Atrás.setFocusable(false);
        b_Atrás.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_AtrásActionPerformed(evt);
            }
        });

        b_NuevoEpisodio.setBackground(new java.awt.Color(204, 204, 204));
        b_NuevoEpisodio.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        b_NuevoEpisodio.setForeground(new java.awt.Color(0, 153, 153));
        b_NuevoEpisodio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/plus_icon.png"))); // NOI18N
        b_NuevoEpisodio.setText("Nuevo Episodio");
        b_NuevoEpisodio.setActionCommand("");
        b_NuevoEpisodio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_NuevoEpisodio.setEnabled(false);
        b_NuevoEpisodio.setFocusable(false);
        b_NuevoEpisodio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_NuevoEpisodioActionPerformed(evt);
            }
        });

        b_VerEpisodios.setBackground(new java.awt.Color(204, 204, 204));
        b_VerEpisodios.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        b_VerEpisodios.setForeground(new java.awt.Color(0, 153, 153));
        b_VerEpisodios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/eye_icon.png"))); // NOI18N
        b_VerEpisodios.setText(" Ver Episodios");
        b_VerEpisodios.setActionCommand("");
        b_VerEpisodios.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_VerEpisodios.setEnabled(false);
        b_VerEpisodios.setFocusable(false);
        b_VerEpisodios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_VerEpisodiosActionPerformed(evt);
            }
        });

        b_NuevaCita.setBackground(new java.awt.Color(204, 204, 204));
        b_NuevaCita.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        b_NuevaCita.setForeground(new java.awt.Color(0, 153, 153));
        b_NuevaCita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/plus_icon.png"))); // NOI18N
        b_NuevaCita.setText("Nueva Cita");
        b_NuevaCita.setActionCommand("");
        b_NuevaCita.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_NuevaCita.setEnabled(false);
        b_NuevaCita.setFocusable(false);
        b_NuevaCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_NuevaCitaActionPerformed(evt);
            }
        });

        b_VerCitas.setBackground(new java.awt.Color(204, 204, 204));
        b_VerCitas.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        b_VerCitas.setForeground(new java.awt.Color(0, 153, 153));
        b_VerCitas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/eye_icon.png"))); // NOI18N
        b_VerCitas.setText("Ver Citas");
        b_VerCitas.setActionCommand("");
        b_VerCitas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_VerCitas.setEnabled(false);
        b_VerCitas.setFocusable(false);
        b_VerCitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_VerCitasActionPerformed(evt);
            }
        });

        b_RegistroVacunacion.setBackground(new java.awt.Color(204, 204, 204));
        b_RegistroVacunacion.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        b_RegistroVacunacion.setForeground(new java.awt.Color(0, 153, 153));
        b_RegistroVacunacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/vaccination_icon.png"))); // NOI18N
        b_RegistroVacunacion.setText("Registro Vacunación");
        b_RegistroVacunacion.setActionCommand("");
        b_RegistroVacunacion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_RegistroVacunacion.setEnabled(false);
        b_RegistroVacunacion.setFocusable(false);
        b_RegistroVacunacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_RegistroVacunacionActionPerformed(evt);
            }
        });

        b_RecetaElectronica.setBackground(new java.awt.Color(204, 204, 204));
        b_RecetaElectronica.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        b_RecetaElectronica.setForeground(new java.awt.Color(0, 153, 153));
        b_RecetaElectronica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/recipe_icon.png"))); // NOI18N
        b_RecetaElectronica.setText("Receta Electrónica");
        b_RecetaElectronica.setActionCommand("");
        b_RecetaElectronica.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_RecetaElectronica.setEnabled(false);
        b_RecetaElectronica.setFocusable(false);
        b_RecetaElectronica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_RecetaElectronicaActionPerformed(evt);
            }
        });

        b_VerHistoria.setBackground(new java.awt.Color(204, 204, 204));
        b_VerHistoria.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        b_VerHistoria.setForeground(new java.awt.Color(0, 153, 153));
        b_VerHistoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/eye_icon.png"))); // NOI18N
        b_VerHistoria.setText("Ver Historia");
        b_VerHistoria.setActionCommand("  ");
        b_VerHistoria.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_VerHistoria.setEnabled(false);
        b_VerHistoria.setFocusable(false);
        b_VerHistoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_VerHistoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_principalLayout = new javax.swing.GroupLayout(panel_principal);
        panel_principal.setLayout(panel_principalLayout);
        panel_principalLayout.setHorizontalGroup(
            panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paner_superior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panel_principalLayout.createSequentialGroup()
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_principalLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(lista_de_pacientes_label))
                    .addGroup(panel_principalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_Atrás, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_principalLayout.createSequentialGroup()
                                .addComponent(b_NuevoEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b_VerEpisodios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel_principalLayout.createSequentialGroup()
                                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(b_RecetaElectronica, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                    .addComponent(b_NuevaCita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(b_VerCitas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(b_VerHistoria, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)))
                            .addComponent(b_RegistroVacunacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(10, 10, 10))
        );
        panel_principalLayout.setVerticalGroup(
            panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_principalLayout.createSequentialGroup()
                .addComponent(paner_superior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lista_de_pacientes_label)
                .addGap(12, 12, 12)
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_principalLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b_Atrás, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addGroup(panel_principalLayout.createSequentialGroup()
                        .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_NuevoEpisodio, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_VerEpisodios, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(b_RegistroVacunacion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_NuevaCita, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_VerCitas, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_RecetaElectronica, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_VerHistoria, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(71, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_principal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Obtiene la lista con los pacientes del sistema
     * 
     * @return List<PacienteDTO>
     * @throws Exception 
     */
    private List<PacienteDTO> obtenerListaConPacientes(){
        Gson gson = new Gson();
        List<PacienteDTO> pacientes = null;
        String pacientesToReceive;
        
        try {
            pacientesToReceive = pxPaciente.obtenerPacientes();
            
            if(pacientesToReceive != null){
                /* Permite obtener los pacientes en un List con PacienteDTO*/
                java.lang.reflect.Type listType = new TypeToken<List<PacienteDTO>>(){}.getType(); 
                pacientes = gson.fromJson(pacientesToReceive, listType);
            } else {
                throw new Exception(ERROR_OBTENER_PACIENTES);
            }
        } catch (Exception ex) {
            mensajeDialogo(ex.getMessage(), JOptionPane.ERROR);
        }
        
        return pacientes;
    }
    
    /**
     * Muestra un botón con el estado de la appCliente,
     * se mostrará el color verde si la conexión con el servidor
     * ha sido exitosa o el color amarillo en caso contrario. 
     * 
     * @param _idConexion 
     */
    private void habilitarBotonConectado(String _idConexion){
        if (idConexion.equals("0")){
            b_connected.setEnabled(false);
            b_connected.setText("Disconnected");
            b_connected.setBackground(Color.YELLOW);
        } else{
            b_connected.setEnabled(true);
            b_connected.setText("Connected with id " + _idConexion);
            b_connected.setBackground(Color.GREEN);
        }
    }
    
    /**
     * Escribe mensaje con diálogo modal.
     * 
     * @param _mensaje
     * @param _messageType
     */    
    public void mensajeDialogo(String _mensaje, int _messageType) {
        JOptionPane.showMessageDialog(this, _mensaje, 
            Hospital.TITULO + " " + Hospital.VERSION, 
            _messageType,  null);    
    } 
    
    /**
     * Rellena la tabla con la información de los pacientes 
     * existentes en el sistema.
     * 
     */
    private void cargarTablaConPacientes(){
        tableModel = (DefaultTableModel) tabla_con_pacientes.getModel();

        for (int i = 0; i < pacientes.size(); i++){
            PacienteDTO paciente = pacientes.get(i);
            tableModel.addRow(paciente.toArray());
        }
    }
    
    /**
     * Habilita los botones en el caso en el que se ha seleccionado
     * un paciente de la tabla
     * 
     * @param evt 
     */
    private void tabla_con_pacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_con_pacientesMouseClicked
        if (tabla_con_pacientes.getSelectedRow() != INDEX_PACIENTE_NO_SELECCIONADO){
            b_NuevoEpisodio.setEnabled(true);
            b_VerEpisodios.setEnabled(true);
            b_RegistroVacunacion.setEnabled(true);
            b_NuevaCita.setEnabled(true);
            b_VerCitas.setEnabled(true);
            b_RecetaElectronica.setEnabled(true);
            b_VerHistoria.setEnabled(true);
            
            indexPacienteSeleccionado = tabla_con_pacientes.getSelectedRow();
        }
    }//GEN-LAST:event_tabla_con_pacientesMouseClicked

    /**
     * Cierra la ventana actual y regresa a la ventana MenuSanitarioVista
     * 
     * @param evt 
     */
    private void b_AtrásActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_AtrásActionPerformed
        this.dispose();
        menuSanitarioVista.setVisible(true);
    }//GEN-LAST:event_b_AtrásActionPerformed

    /**
     * Habilita la pantalla que permite añadir un nuevo episodio a un 
     * paciente existente en el sistema
     * 
     * @param evt 
     */
    private void b_NuevoEpisodioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_NuevoEpisodioActionPerformed
        PacienteDTO pacienteSeleccionado = pacientes.get(indexPacienteSeleccionado);
        
        this.setVisible(false);
        new NuevoEpisodioVista(this, oyenteVista, comms, idConexion, pacienteSeleccionado).setVisible(true);
    }//GEN-LAST:event_b_NuevoEpisodioActionPerformed
    
    /**
     * Habilita la pantalla que permite ver los episodios de un paciente
     * y añadir un diagnóstico a los episodios no cerrados
     * 
     * @param evt 
     */
    private void b_VerEpisodiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_VerEpisodiosActionPerformed
        PacienteDTO pacienteSeleccionado = pacientes.get(indexPacienteSeleccionado);
        this.setVisible(false);
        new EpisodiosPacienteVista(this, oyenteVista, comms, idConexion, pacienteSeleccionado).setVisible(true);
    }//GEN-LAST:event_b_VerEpisodiosActionPerformed
    
    /**
     * Habilita la pantalla que permite añadir una nueva cita de un paciente
     * 
     * @param evt 
     */
    private void b_NuevaCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_NuevaCitaActionPerformed
        PacienteDTO pacienteSeleccionado = pacientes.get(indexPacienteSeleccionado);

        this.setVisible(false);
        new NuevaCitaVista(this, oyenteVista, comms, idConexion, pacienteSeleccionado).setVisible(true);
    }//GEN-LAST:event_b_NuevaCitaActionPerformed

    /**
     * Habilita la pantalla que permite ver las citas de un paciente
     * 
     * @param evt 
     */
    private void b_VerCitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_VerCitasActionPerformed
        PacienteDTO pacienteSeleccionado = pacientes.get(indexPacienteSeleccionado);

        this.setVisible(false);
        new CitasPacienteVista(this, oyenteVista, comms, idConexion, pacienteSeleccionado).setVisible(true);
    }//GEN-LAST:event_b_VerCitasActionPerformed

    /**
     * Habilita la pantalla que permite ver la lista de vacunas administradas
     * a un paciente y añadir a dicha lista una nueva vacuna
     * 
     * @param evt 
     */
    private void b_RegistroVacunacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_RegistroVacunacionActionPerformed
        PacienteDTO pacienteSeleccionado = pacientes.get(indexPacienteSeleccionado);

        this.setVisible(false);
        new RegistroVacunacionVista(this, oyenteVista, comms, idConexion, pacienteSeleccionado).setVisible(true);
    }//GEN-LAST:event_b_RegistroVacunacionActionPerformed

    /**
     * Habilita la pantalla que permite ver la lista de medicamentos de un 
     * paciente y añadir un nuevo medicamento a dicha lista
     * 
     * @param evt 
     */
    private void b_RecetaElectronicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_RecetaElectronicaActionPerformed
        PacienteDTO pacienteSeleccionado = pacientes.get(indexPacienteSeleccionado);

        this.setVisible(false);
        new RecetaElectronicaVista(this, oyenteVista, comms, idConexion, pacienteSeleccionado).setVisible(true);
    }//GEN-LAST:event_b_RecetaElectronicaActionPerformed

    /**
     * Habilita la pantalla que permite ver la información completa de un
     * paciente existente en el sistema
     * 
     * @param evt 
     */
    private void b_VerHistoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_VerHistoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b_VerHistoriaActionPerformed
    
    /**
     * Captura el evento relacionado con el cierre de la ventana, y 
     * envía el evento a la capa control para realizar las acciones
     * de finalización necesarias para la appCliente.
     * 
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        oyenteVista.eventoProducido(OyenteVista.Evento.SALIR, null);
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_Atrás;
    private javax.swing.JButton b_NuevaCita;
    private javax.swing.JButton b_NuevoEpisodio;
    private javax.swing.JButton b_RecetaElectronica;
    private javax.swing.JButton b_RegistroVacunacion;
    private javax.swing.JButton b_VerCitas;
    private javax.swing.JButton b_VerEpisodios;
    private javax.swing.JButton b_VerHistoria;
    private javax.swing.JButton b_connected;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel gestionDePacientes_label;
    private javax.swing.JLabel hospital_icon;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lista_de_pacientes_label;
    private javax.swing.JPanel panel_principal;
    private javax.swing.JPanel paner_superior;
    private javax.swing.JTable tabla_con_pacientes;
    // End of variables declaration//GEN-END:variables
}
