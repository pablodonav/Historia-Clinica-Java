/**
 * HistoriaCompletaVista.java
 * Adnana Catrinel Dragut
 * v1.0 09/05/2022.
 * 
 */
package vista.vistasUsuarioSanitario;

import com.google.gson.Gson;
import control.Hospital;
import control.OyenteVista;
import java.awt.Color;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.clasesDTOs.EpisodioDeAtencionDTO;
import modelo.clasesDTOs.HistoriaPacienteDTO;
import modelo.clasesDTOs.MedicamentoPacienteDTO;
import modelo.clasesDTOs.PacienteDTO;
import modelo.clasesDTOs.VacunaPacienteDTO;
import modelo.clasesProxys.Comms;
import modelo.clasesProxys.ProxyPaciente;

/**
 * Clase que contiene los métodos para crear y gestionar 
 * los componentes y los eventos de la pantalla HistoriaCompletaVista.
 * 
 */
public class HistoriaCompletaVista extends javax.swing.JFrame {
    private MenuGestionPacientesVista menuGestionPacientesVista = null;
    private Comms comms = null;
    private Gson gson = null;
    private OyenteVista oyenteVista = null;
    private String idConexion = null;
    private ProxyPaciente pxPaciente = null;
    private PacienteDTO pacienteSeleccionado = null;
    private HistoriaPacienteDTO historiaPaciente = null;
    private DefaultTableModel tableModelEpisodiosAtencion = null;
    private DefaultTableModel tableModelRecetaElectronica = null;
    private DefaultTableModel tableModelVacunasAdministradas = null;

    /* Mensajes de Error */
    private final String ERROR_OBTENER_HISTORIA = 
            "No se ha podido obtener la historia clínica del paciente.";
    
    /**
     * Crea e inicializa los componentes de HistoriaCompletaVista.
     * 
     * @param _menuGestionPacientesVista
     * @param _oyenteVista
     * @param _comms
     * @param _idConexion
     * @param _paciente 
     */
    public HistoriaCompletaVista(MenuGestionPacientesVista _menuGestionPacientesVista, 
            OyenteVista _oyenteVista, Comms _comms, String _idConexion, PacienteDTO _paciente) {
                this.menuGestionPacientesVista  = _menuGestionPacientesVista;
        this.comms = _comms;
        this.gson = new Gson();
        this.oyenteVista = _oyenteVista;
        this.idConexion = _idConexion;
        this.pxPaciente = ProxyPaciente.getInstance();
        this.pacienteSeleccionado = _paciente;
        this.historiaPaciente = obtenerHistoriaPaciente();
       
        initComponents();
        setResizable(false);  //Deshabilita la opción de maximizar-minimizar 
        pack();   // ajusta ventana y sus componentes
        setLocationRelativeTo(null);  // centra en la pantalla
        habilitarBotonConectado(idConexion);
        copiarInformaciónPacienteEnInputFields();
        cargarTablaConEpisodios();
        cargarTablaConMedicamentos();
        cargarTablaConVacunas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_principal = new javax.swing.JPanel();
        paner_superior = new javax.swing.JPanel();
        historiaCompleta_label = new javax.swing.JLabel();
        hospital_icon = new javax.swing.JLabel();
        b_connected = new javax.swing.JButton();
        datos_paciente_label = new javax.swing.JLabel();
        nss_label = new javax.swing.JLabel();
        nss_input_field = new javax.swing.JTextField();
        nombre_label = new javax.swing.JLabel();
        nombre_input_field = new javax.swing.JTextField();
        apellido1_label = new javax.swing.JLabel();
        apellido1_input_field = new javax.swing.JTextField();
        apellido2_label = new javax.swing.JLabel();
        apellido2_input_field = new javax.swing.JTextField();
        edad_label = new javax.swing.JLabel();
        edad_input_field = new javax.swing.JTextField();
        peso_label = new javax.swing.JLabel();
        peso_input_field = new javax.swing.JTextField();
        altura_label = new javax.swing.JLabel();
        altura_input_field = new javax.swing.JTextField();
        alergias_label = new javax.swing.JLabel();
        alergias_input_field = new javax.swing.JTextField();
        b_Atrás = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        episodios_panel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_con_episodios = new javax.swing.JTable();
        receta_panel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_con_medicamentos = new javax.swing.JTable();
        vacunas_panel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_con_vacunas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panel_principal.setBackground(new java.awt.Color(255, 255, 255));

        paner_superior.setBackground(new java.awt.Color(0, 153, 153));
        paner_superior.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        historiaCompleta_label.setFont(new java.awt.Font("Berlin Sans FB", 1, 24)); // NOI18N
        historiaCompleta_label.setText("Historia Completa");

        hospital_icon.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        hospital_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/hospital_icon.png"))); // NOI18N
        hospital_icon.setMaximumSize(new java.awt.Dimension(70, 70));
        hospital_icon.setMinimumSize(new java.awt.Dimension(70, 70));
        hospital_icon.setPreferredSize(new java.awt.Dimension(70, 70));

        b_connected.setBackground(new java.awt.Color(204, 204, 204));
        b_connected.setText("   ");
        b_connected.setBorder(null);
        b_connected.setEnabled(false);
        b_connected.setFocusable(false);
        b_connected.setSelected(true);

        javax.swing.GroupLayout paner_superiorLayout = new javax.swing.GroupLayout(paner_superior);
        paner_superior.setLayout(paner_superiorLayout);
        paner_superiorLayout.setHorizontalGroup(
            paner_superiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paner_superiorLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(hospital_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(paner_superiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paner_superiorLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_connected, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paner_superiorLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(historiaCompleta_label)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        paner_superiorLayout.setVerticalGroup(
            paner_superiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hospital_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(paner_superiorLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(historiaCompleta_label)
                .addGap(16, 16, 16)
                .addComponent(b_connected))
        );

        datos_paciente_label.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        datos_paciente_label.setForeground(new java.awt.Color(0, 153, 153));
        datos_paciente_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        datos_paciente_label.setText("Datos Paciente ");
        datos_paciente_label.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        nss_label.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        nss_label.setText("NSS");

        nss_input_field.setEditable(false);

        nombre_label.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        nombre_label.setText("Nombre");

        nombre_input_field.setEditable(false);

        apellido1_label.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        apellido1_label.setText("Apellido 1");

        apellido1_input_field.setEditable(false);

        apellido2_label.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        apellido2_label.setText("Apellido 2");

        apellido2_input_field.setEditable(false);

        edad_label.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        edad_label.setText("Edad");

        edad_input_field.setEditable(false);

        peso_label.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        peso_label.setText("Peso");

        peso_input_field.setEditable(false);

        altura_label.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        altura_label.setText("Altura");

        altura_input_field.setEditable(false);

        alergias_label.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        alergias_label.setText("Alergias");

        alergias_input_field.setEditable(false);

        b_Atrás.setBackground(new java.awt.Color(204, 204, 204));
        b_Atrás.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        b_Atrás.setForeground(new java.awt.Color(0, 153, 153));
        b_Atrás.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/imgs/atras_icon.png"))); // NOI18N
        b_Atrás.setText("   Atrás");
        b_Atrás.setActionCommand("   Nuevo Sanitario");
        b_Atrás.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_Atrás.setFocusable(false);
        b_Atrás.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_AtrásActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 204));
        jTabbedPane1.setFont(new java.awt.Font("Berlin Sans FB", 1, 14)); // NOI18N

        episodios_panel.setBackground(new java.awt.Color(255, 255, 255));
        episodios_panel.setForeground(new java.awt.Color(51, 51, 51));

        tabla_con_episodios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Fecha", "Motivo/s", "Diagnóstico"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_con_episodios.setFocusable(false);
        tabla_con_episodios.setGridColor(new java.awt.Color(0, 153, 153));
        tabla_con_episodios.setRowHeight(20);
        tabla_con_episodios.setRowSelectionAllowed(false);
        tabla_con_episodios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla_con_episodios.setShowGrid(true);
        jScrollPane2.setViewportView(tabla_con_episodios);

        javax.swing.GroupLayout episodios_panelLayout = new javax.swing.GroupLayout(episodios_panel);
        episodios_panel.setLayout(episodios_panelLayout);
        episodios_panelLayout.setHorizontalGroup(
            episodios_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );
        episodios_panelLayout.setVerticalGroup(
            episodios_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ver Episodios", episodios_panel);

        receta_panel.setBackground(new java.awt.Color(255, 255, 255));

        tabla_con_medicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Fecha Inicio", "Fecha Fin"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_con_medicamentos.setFocusable(false);
        tabla_con_medicamentos.setGridColor(new java.awt.Color(0, 153, 153));
        tabla_con_medicamentos.setRowHeight(20);
        tabla_con_medicamentos.setRowSelectionAllowed(false);
        tabla_con_medicamentos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla_con_medicamentos.setShowGrid(true);
        jScrollPane3.setViewportView(tabla_con_medicamentos);

        javax.swing.GroupLayout receta_panelLayout = new javax.swing.GroupLayout(receta_panel);
        receta_panel.setLayout(receta_panelLayout);
        receta_panelLayout.setHorizontalGroup(
            receta_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );
        receta_panelLayout.setVerticalGroup(
            receta_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ver Receta Electrónica", receta_panel);

        vacunas_panel.setBackground(new java.awt.Color(255, 255, 255));

        tabla_con_vacunas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_con_vacunas.setFocusable(false);
        tabla_con_vacunas.setGridColor(new java.awt.Color(0, 153, 153));
        tabla_con_vacunas.setRowHeight(20);
        tabla_con_vacunas.setRowSelectionAllowed(false);
        tabla_con_vacunas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla_con_vacunas.setShowGrid(true);
        jScrollPane4.setViewportView(tabla_con_vacunas);

        javax.swing.GroupLayout vacunas_panelLayout = new javax.swing.GroupLayout(vacunas_panel);
        vacunas_panel.setLayout(vacunas_panelLayout);
        vacunas_panelLayout.setHorizontalGroup(
            vacunas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );
        vacunas_panelLayout.setVerticalGroup(
            vacunas_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ver Vacunas Administradas", vacunas_panel);

        javax.swing.GroupLayout panel_principalLayout = new javax.swing.GroupLayout(panel_principal);
        panel_principal.setLayout(panel_principalLayout);
        panel_principalLayout.setHorizontalGroup(
            panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paner_superior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panel_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_principalLayout.createSequentialGroup()
                        .addComponent(b_Atrás, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_principalLayout.createSequentialGroup()
                        .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTabbedPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_principalLayout.createSequentialGroup()
                                .addComponent(edad_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(edad_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(peso_label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(peso_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(altura_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(altura_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(alergias_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(alergias_input_field))
                            .addGroup(panel_principalLayout.createSequentialGroup()
                                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panel_principalLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(datos_paciente_label))
                                    .addGroup(panel_principalLayout.createSequentialGroup()
                                        .addComponent(nss_label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(nss_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nombre_label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(nombre_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(apellido1_label)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(apellido1_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(apellido2_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(apellido2_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))))
        );
        panel_principalLayout.setVerticalGroup(
            panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_principalLayout.createSequentialGroup()
                .addComponent(paner_superior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(datos_paciente_label)
                .addGap(18, 18, 18)
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nss_label)
                    .addComponent(nss_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellido2_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellido2_label)
                    .addComponent(apellido1_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellido1_label)
                    .addComponent(nombre_label)
                    .addComponent(nombre_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edad_label)
                    .addComponent(edad_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(peso_label)
                    .addComponent(peso_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(altura_label)
                    .addComponent(altura_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alergias_label)
                    .addComponent(alergias_input_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_Atrás, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Obtiene la historia completa de un paciente
     * 
     * @return List<HistoriaPacienteDTO>
     * @throws Exception 
     */
    private HistoriaPacienteDTO obtenerHistoriaPaciente(){
        Gson gson = new Gson();
        String historiaToReceive;
        
        try {
            historiaToReceive = pxPaciente.obtenerHistoriaPaciente(pacienteSeleccionado.getNss());
            System.out.println(historiaToReceive);
            if(historiaToReceive != null){
                return gson.fromJson(historiaToReceive, HistoriaPacienteDTO.class);
            } else{
                throw new Exception(ERROR_OBTENER_HISTORIA);
            }
        } catch (Exception ex) {
            mensajeDialogo(ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
        
        return null;
    }
    
    /**
     * Rellena la tabla con la información de los episodios
     * de la historia del paciente seleccionado.
     * 
     */
    private void cargarTablaConEpisodios(){
        tableModelEpisodiosAtencion = (DefaultTableModel) tabla_con_episodios.getModel();
        List<EpisodioDeAtencionDTO> episodios = historiaPaciente.getEpisodios();

        for (int i = 0; i < episodios.size(); i++){
            EpisodioDeAtencionDTO episodio = episodios.get(i);
            tableModelEpisodiosAtencion.addRow(episodio.toArray());
        }
    }
    
    /**
     * Rellena la tabla con la información de la receta 
     * electrónica de la historia del paciente seleccionado.
     * 
     */
    private void cargarTablaConMedicamentos(){
        tableModelRecetaElectronica = (DefaultTableModel) tabla_con_medicamentos.getModel();
        List<MedicamentoPacienteDTO> medicamentos = historiaPaciente.getMedicamentos();

        for (int i = 0; i < medicamentos.size(); i++){
            MedicamentoPacienteDTO medicamento = medicamentos.get(i);
            tableModelRecetaElectronica.addRow(medicamento.toArray());
        }
    }
    
    /**
     * Rellena la tabla con la información de las vacunas 
     * de la historia del paciente seleccionado.
     * 
     */
    private void cargarTablaConVacunas(){
        tableModelVacunasAdministradas = (DefaultTableModel) tabla_con_vacunas.getModel();
        List<VacunaPacienteDTO> vacunas = historiaPaciente.getVacunas();

        for (int i = 0; i < vacunas.size(); i++){
            VacunaPacienteDTO vacuna = vacunas.get(i);
            tableModelVacunasAdministradas.addRow(vacuna.toArray());
        }
    }
    
    /**
     * Muestra un botón con el estado de la appCliente,
     * se mostrará el color verde si la conexión con el servidor
     * ha sido exitosa o el color amarillo en caso contrario. 
     * 
     * @param _idConexion 
     */
    private void habilitarBotonConectado(String _idConexion){
        if (idConexion.equals("0")){
            b_connected.setEnabled(false);
            b_connected.setText("Disconnected");
            b_connected.setBackground(Color.YELLOW);
        } else{
            b_connected.setEnabled(true);
            b_connected.setText("Connected with id " + _idConexion);
            b_connected.setBackground(Color.GREEN);
        }
    }

    /**
     * Escribe mensaje con diálogo modal.
     * 
     * @param _mensaje
     * @param _messageType
     */    
    public void mensajeDialogo(String _mensaje, int _messageType) {
        JOptionPane.showMessageDialog(this, _mensaje, 
            Hospital.TITULO + " " + Hospital.VERSION, 
            _messageType,  null);    
    } 
        
    /**
     * Introduce la información del paciente seleccionado en los input fields
     * del apartado correspondiente a "Datos Paciente".
     * 
     */
    private void copiarInformaciónPacienteEnInputFields(){
        nss_input_field.setText(pacienteSeleccionado.getNss());
        nombre_input_field.setText(pacienteSeleccionado.getNombre());
        apellido1_input_field.setText(pacienteSeleccionado.getApellido1());
        apellido2_input_field.setText(pacienteSeleccionado.getApellido2());
        edad_input_field.setText(String.valueOf(pacienteSeleccionado.getEdad()));
        peso_input_field.setText(String.valueOf(pacienteSeleccionado.getPeso()));
        altura_input_field.setText(String.valueOf(pacienteSeleccionado.getAltura()));
        alergias_input_field.setText(String.valueOf(pacienteSeleccionado.getAlergias()));
    }
    
    /**
     * Cierra la ventana actual y regresa a la ventana MenuGestionPacientesVista
     * 
     * @param evt 
     */
    private void b_AtrásActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_AtrásActionPerformed
        this.dispose();
        menuGestionPacientesVista.setVisible(true);
    }//GEN-LAST:event_b_AtrásActionPerformed

    /**
     * Captura el evento relacionado con el cierre de la ventana, y 
     * envía el evento a la capa control para realizar las acciones
     * de finalización necesarias para la appCliente.
     * 
     * @param evt
     */  
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        oyenteVista.eventoProducido(OyenteVista.Evento.SALIR, null);
    }//GEN-LAST:event_formWindowClosing
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alergias_input_field;
    private javax.swing.JLabel alergias_label;
    private javax.swing.JTextField altura_input_field;
    private javax.swing.JLabel altura_label;
    private javax.swing.JTextField apellido1_input_field;
    private javax.swing.JLabel apellido1_label;
    private javax.swing.JTextField apellido2_input_field;
    private javax.swing.JLabel apellido2_label;
    private javax.swing.JButton b_Atrás;
    private javax.swing.JButton b_connected;
    private javax.swing.JLabel datos_paciente_label;
    private javax.swing.JTextField edad_input_field;
    private javax.swing.JLabel edad_label;
    private javax.swing.JPanel episodios_panel;
    private javax.swing.JLabel historiaCompleta_label;
    private javax.swing.JLabel hospital_icon;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nombre_input_field;
    private javax.swing.JLabel nombre_label;
    private javax.swing.JTextField nss_input_field;
    private javax.swing.JLabel nss_label;
    private javax.swing.JPanel panel_principal;
    private javax.swing.JPanel paner_superior;
    private javax.swing.JTextField peso_input_field;
    private javax.swing.JLabel peso_label;
    private javax.swing.JPanel receta_panel;
    private javax.swing.JTable tabla_con_episodios;
    private javax.swing.JTable tabla_con_medicamentos;
    private javax.swing.JTable tabla_con_vacunas;
    private javax.swing.JPanel vacunas_panel;
    // End of variables declaration//GEN-END:variables
}
